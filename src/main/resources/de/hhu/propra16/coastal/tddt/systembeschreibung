Systembeschreibung (unfertig und etwas abgeändert von .odt zu .txt)

1 Oberfläche
Die Main erstellt zunächst einen FileWriter für chart.txt, erstellt eine Scene mit sample.fxml und bindet tddt.css ein. Zudem startet sie das Programm und übergibt die primaryStage an TDDTMenu.
sample.fxml ist im Großen und Ganzen einerseits für das Layout und den Zustand (Größe, Position, disabled, editable etc.), andererseits für die aufzurufenden Funktionen der Buttons/MenuBar/... verantwortlich (z. B. beim btnnextstep: onAction="#next").
tddt.css legt die Farben des Status und der zu highlightenden Strings in den TDDTextAreas (RichText) fest.

2 Hauptfunktionen
Bei TDDTMenu werden u. a. die von sample.fxml aufzurufenden Funktionen implementiert: open, saveClick, close, next, previous, help, chooseExercise (und showChart, die aber erst in Kapitel 3 aufgegriffen wird).
In den folgenden Unterkapiteln werden die Erläuterungen aufs Wesentliche reduziert. Wie enum funktioniert, wird einmalig in close (gui-package) erklärt.

2.1 gui-package
open:
durch FileChooser öffnet sich ein Fenster, aus dem man eine XML-Datei auswählen muss
Exercises werden durch einen CatalogParser in TDDListView<Exercise> (diese ist wie eine normale ListView) hineingeladen

saveClick:
ruft save auf
save schreibt den zu speichernden Text in eine JAVA-Datei

close:
ruft speichernAbfrage mit dem enum TriggerSaveOption.Close auf:
speichernAbfrage ruft nun ein Alert-Fenster mit zwei Buttons (Ja/Nein) auf, das, je nachdem, welches TriggerSaveOption-enum übergeben wurde, einen anderen Text anzeigt
primaryStage.close schließt das Fenster

next:
ruft CompilerInteraction.compile auf, übergibt dabei einige Parameter

previous:
ruft CompilerReport.back auf, übergibt dabei einige Parameter

help:
öffnet help.html, welches einfach der Text des Benutzerhandbuchs in

chooseExercise:
angeklickte Exercise ...

2.2 catalog-package

2.3 compiler-package

3 Zusatzfunktionen

3.1 Babysteps

3.2 Tracking

3.3 ATDD